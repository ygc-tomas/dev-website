@use "../variable" as v;

/* ---------------------------
l-header
--------------------------- */

.l-header {
	position: fixed;
	background-color: #fff;
	z-index: 1000;

	@include v.mq(lp) {
		border-radius: 20px 20px 20px 40px;
		height: 116px;
		max-width: 1500px;
		width: calc(100% - 80px);
		top: 40px;
		left: 50%;
		transform: translateX(-50%);
	}

	@include v.mq(ts) {
		top: 0;
		left: 0;
		width: 100%;
		height: 65px;
	}

	&__inner {
		display: flex;
		align-items: center;
		height: 100%;

		@include v.mq(lp) {
			padding-left: 36px;
			padding-left: 20px;
		}

		@include v.mq(ts) {
			padding: 0 15px;
		}
	}

	&__logo {
		display: flex;
		align-items: center;

		@include v.mq(lp) {
			max-width: 227px;
			max-width: 156px;
			width: 100%;
			margin-right: 16px;
		}

		@include v.mq(p) {
			max-width: 124px;
		}

		@include v.mq(ts) {
			width: 130px;
		}
	}

	&__contents {
		display: flex;

		@include v.mq(lp) {
			justify-content: flex-end;
			align-items: center;
			margin-left: auto;
			flex: 1;
			height: 100%;
		}

		@include v.mq(ts) {
			padding: 45px 20px 40px;
			flex-direction: column;
			position: absolute;
			top: 65px;
			left: 0;
			width: 100%;
			height: calc(100vh - 65px);
			overflow-y: scroll;
			background-color: v.$c-tertiary;
			transition: 0.3s;
			opacity: 0;
			pointer-events: none;
			transform: translateX(100%);

			&.--open {
				opacity: 1;
				pointer-events: auto;
				transform: translateX(0);
			}
		}
	}

	&__nav {
		// position: relative;
		display: flex;
		align-items: center;

		@include v.mq(l) {
			margin-right: 170px;
			padding-right: 30px;
			height: 100%;
		}

		@include v.mq(p) {
			margin-right: 130px;
			padding-right: 10px;
			height: 100%;
		}

		@include v.mq(ts) {}

		&::after {
			content: "";
			display: block;
			width: 1px;
			height: 28px;
			position: absolute;
			top: 50%;
			right: 0;
			transform: translateY(-50%);
			background-color: v.$c-tertiary;
		}

		&__list {
			display: flex;


			@include v.mq(lp) {
				align-items: center;
				gap: 8px 20px;
				height: 100%;
			}

			@include v.mq(p) {
				gap: 16px;
			}

			@include v.mq(ts) {
				flex-direction: column;
				gap: 20px;
			}

			&__item {
				// position: relative;

				@include v.mq(lp) {
					padding: 12px 0;
					height: 100%;
					display: flex;
					align-items: center;
				}

				@include v.mq(ts) {}

				&:has(.l-header__nav__meganav) {
					.l-header__nav__list__link {
						padding-right: 20px;

						&::after {
							content: "";
							display: block;
							aspect-ratio: 13/10;
							width: 10px;
							position: absolute;
							top: 50%;
							right: 0;
							transform: translateY(-50%);
							background-image: url(../images/common/icon_arrow_02.svg);
							background-size: contain;
							background-repeat: no-repeat;
							background-position: center;
						}
					}
				}

				&:hover {
					>.l-header__nav__meganav {
						transform: scaleY(1);
						pointer-events: auto;
						opacity: 1;
					}
				}
			}

			&__link {
				color: v.$c-tertiary;
				font-weight: 500;
				line-height: 1.25;
				display: block;
				position: relative;

				@include v.mq(lp) {
					// font-size: min(calc(12 / 1320 * 100vw), 16px);
					font-size: v.rem(14);
				}

				@include v.mq(p) {
					font-size: v.rem(12);
				}

				@include v.mq(ts) {
					color: #fff;
					font-size: v.srem(20);
					font-weight: bold;
				}

			}
		}

		&__meganav {
			position: absolute;
			top: 100%;
			left: 0;
			background-color: v.$c-base;
			display: flex;
			flex-direction: column;
			width: auto;
			border-radius: 10px 20px 10px 20px;

			transform: scaleY(0);
			opacity: 0;
			pointer-events: nooe;
			transition: 0.3s;
			transform-origin: top;

			@include v.mq(lp) {
				// padding: 12px 18px;
				padding: 24px 60px;
				width: 100%;
			}

			@include v.mq(ts) {
				display: none;
			}

			&__contents {}

			&__list {
				display: flex;
				flex-direction: column;
				gap: 26px;

				&__item {
					&:not(:last-child) {
						border-bottom: 1px solid #fff;
						padding-bottom: 24px;
					}
				}

				&__heading {
					color: #fff;
					font-weight: 600;
				}
			}

			&__linkList {
				display: flex;
				flex-wrap: wrap;
				gap: 8px 20px;
				margin-top: 10px;

				&__item {
					a {
						color: #fff;
						font-size: v.rem(14);
						padding-left: 15px;
						position: relative;

						&::before {
							content: "";
							display: block;
							width: 6px;
							height: 6px;
							position: absolute;
							top: 7px;
							left: 0;
							border-top: 2px solid #fff;
							border-right: 2px solid #fff;
							transform: rotate(45deg);
						}
					}
				}
			}

			// &__item {}

			// &__link {
			// 	color: #fff;
			// 	text-align: left;
			// 	display: block;
			// 	white-space: nowrap;
			// 	width: 100%;

			// 	.l-header__nav__meganav__item:not(:last-child) & {
			// 		border-bottom: 1px solid #fff;
			// 	}

			// 	@include v.mq(lp) {
			// 		font-size: v.rem(14);
			// 		// padding: 8px 24px 8px 12px;
			// 		padding: 12px 0;
			// 	}

			// 	@include v.mq(ts) {}

			// 	&:hover {
			// 		opacity: 0.7;
			// 	}
			// }
		}
	}

	&__btnLink {
		display: flex;
		height: 100%;

		@include v.mq(lp) {}

		@include v.mq(ts) {
			flex-direction: column;
			margin-top: 37px;
			gap: 15px;
		}

		&__item {
			display: flex;
			align-items: center;
			justify-content: center;
			font-weight: 500;

			@include v.mq(lp) {
				width: 165px;
				flex-direction: column;
				font-size: v.rem(14);
				font-size: min(calc(12 / 1320 * 100vw), 14px);
				border-radius: 40px 20px 20px 0;
				padding: 10px 20px;
				height: 100%;
			}

			@include v.mq(p) {
				border-radius: 30px 20px 20px 0;
				width: 120px;
			}

			@include v.mq(ts) {
				font-size: v.srem(12);
				border-radius: 9999px;
				padding: 12px 5px 12px 5px;
			}

			.icon {
				display: block;

				@include v.mq(lp) {
					margin-top: 8px;
				}

				@include v.mq(ts) {
					max-width: 18px;
				}
			}

			.label {
				text-align: center;

				@include v.mq(lp) {
					padding-top: 8px;
				}

				@include v.mq(ts) {
					margin-left: 10px;
					font-size: v.srem(16);
				}
			}

			&.--document {
				background-color: v.$c-base;
				color: #fff;

				@include v.mq(lp) {
					width: 194px;
					padding: 10px 70px 10px 20px;
					margin-right: -50px;
				}

				@include v.mq(p) {
					width: 140px;
					margin-right: -30px;
					padding: 10px 50px 10px 20px;
					border-radius: 30px 0 0 0;
				}

				@include v.mq(ts) {}
			}

			&.--contact {
				background-color: v.$c-secondary;
				color: v.$c-tertiary;
			}

			&:hover {
				opacity: 1;
			}
		}
	}

	&__lang {
		position: absolute;
		border: 1px solid v.$c-tertiary;
		text-align: center;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;
		overflow: hidden;

		@include v.mq(lp) {
			width: 140px;
			border-radius: 20px;
			// margin-right: 30px;
			top: 37px;
			right: 320px;
		}

		@include v.mq(p) {
			width: 110px;
			right: 240px;
		}

		@include v.mq(ts) {
			width: 120px;
			top: 14px;
			border-radius: 20px;
			right: 50px;
		}

		&::after {
			content: "";
			display: block;
			aspect-ratio: 13/9;
			position: absolute;
			background-image: url(../images/common/icon_arrow_02.svg);
			background-size: contain;
			background-repeat: no-repeat;
			background-position: center;

			@include v.mq(lp) {
				width: 12px;
				top: 18px;
				right: 16px;
			}

			@include v.mq(ts) {
				width: 10px;
				top: 14px;
				right: 10px;
			}
		}

		&:hover {
			&::after {
				background-image: url(../images/common/icon_arrow_02_wh.svg);
			}

			.l-header__lang__heading {
				background-color: v.$c-tertiary;
				color: #fff;
			}

			.l-header__lang__list {
				transform: scaleY(1);
				opacity: 1;
				height: auto;
				pointer-events: auto;
			}
		}

		&__heading {
			background-color: #fff;
			border: none;
			color: v.$c-tertiary;
			text-align: center;
			width: 100%;
			font-weight: 500;
			transition: 0.3s;
			line-height: 1;

			@include v.mq(lp) {
				font-size: v.rem(14);
				height: 42px;
				display: flex;
				justify-content: center;
				align-items: center;
				padding-right: 8px;
			}

			@include v.mq(p) {
				font-size: v.rem(12);
			}

			@include v.mq(ts) {
				font-size: v.srem(12);
				height: 32px;
				padding-right: 6px;
			}
		}

		&__list {
			width: 100%;
			background-color: #fff;

			height: 0;
			transform: scaleY(0);
			opacity: 0;
			pointer-events: none;
			transition: 0.3s;
			transform-origin: top;

			@include v.mq(lp) {
				// padding: 0 12px;
			}

			@include v.mq(ts) {
				// padding: 0 10px;
			}

			&__item {}

			&__link {
				display: block;
				text-align: center;

				.l-header__lang__list__item:not(:last-child) & {

					// border-bottom: 1px solid v.$c-tertiary;
					&::after {
						content: "";
						display: block;
						height: 1px;
						position: absolute;
						bottom: 0;
						left: 50%;
						transform: translateX(-50%);
						background-color: v.$c-tertiary;

						@include v.mq(lp) {
							width: calc(100% - 24px);
						}

						@include v.mq(ts) {
							width: calc(100% - 20px);
						}
					}
				}

				font-weight: 500;

				@include v.mq(lp) {
					font-size: v.rem(14);
					padding: 6px 0;
				}

				@include v.mq(p) {
					font-size: v.rem(12);
				}

				@include v.mq(ts) {
					font-size: v.srem(12);
					padding: 5px 0;
				}

				&:hover {
					opacity: 0.7;
				}

				&.--current {
					background-color: v.$c-tertiary;
					color: #fff;
				}
			}
		}
	}

	&__humberger {
		@include v.mq(lp) {
			display: none;
		}

		@include v.mq(ts) {
			border: none;
			background: none;
			display: block;
			width: 24px;
			height: 24px;
			position: relative;
			margin-left: auto;

			.line {
				position: absolute;
				top: 50%;
				left: 50%;
				// transform: translateX(-50%);
				display: block;
				width: 100%;
				height: 2px;
				background-color: v.$c-tertiary;
				transition: 0.3s;

				&:first-child {
					transform: translate(-50%, calc(-50% - 8px));
					// top: 3px;
				}

				&:nth-child(2) {
					// top: 12px;
					transform: translate(-50%, -50%);
				}

				&:last-child {
					// top: 21px;
					transform: translate(-50%, calc(-50% + 8px));
				}
			}

			&.--open {
				.line {
					transform: translate(-50%, -50%) rotate(45deg);

					&:last-child {
						transform: translate(-50%, -50%) rotate(-45deg);
					}
				}
			}
		}
	}
}